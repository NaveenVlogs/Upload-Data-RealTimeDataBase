	// Upload Image and Data into RealTimeDatabase


public class UploadActivity extends AppCompatActivity {

    ImageView brouseimage,btnimage;
    Button uploadbtn;
    EditText etproductname,etprice,etgauranty,etold;
    Uri filepath;
    Bitmap bitnap;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_upload);
        uploadbtn = findViewById(R.id.uploadbtn);
        brouseimage = findViewById(R.id.brouseimage);
        btnimage = findViewById(R.id.btnimage);

        brouseimage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {




                Dexter.withContext(UploadActivity.this)
                        .withPermission(Manifest.permission.READ_EXTERNAL_STORAGE)
                        .withListener(new PermissionListener() {
                            @Override
                            public void onPermissionGranted(PermissionGrantedResponse permissionGrantedResponse) {
                                Intent intent = new Intent(Intent.ACTION_PICK);
                                intent.setType("image/*");
                                startActivityForResult(Intent.createChooser(intent,"selectimage"),1);
                            }

                            @Override
                            public void onPermissionDenied(PermissionDeniedResponse permissionDeniedResponse) {

                            }

                            @Override
                            public void onPermissionRationaleShouldBeShown(PermissionRequest permissionRequest, PermissionToken permissionToken) {

                            }
                        }).check();

                         }


                          });
                            uploadbtn.setOnClickListener(new View.OnClickListener() {
                                @Override
                                public void onClick(View view) {
                                    uploadtofirebase();
                                }
                            });

                           }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable  Intent data) {

        if (requestCode == 1 && resultCode == RESULT_OK){
            filepath = data.getData();

            try {
                InputStream inputStream= getContentResolver()
                        .openInputStream(filepath);
                bitnap = BitmapFactory.decodeStream(inputStream);
                btnimage.setImageBitmap(bitnap);


            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }

        }


        super.onActivityResult(requestCode, resultCode, data);
    }

    private void uploadtofirebase() {


        ProgressDialog dailog = new ProgressDialog(this);
        dailog.setTitle("Processing");
        dailog.show();



        etproductname = findViewById(R.id.etproductname);
        etprice = findViewById(R.id.etprice);
        etgauranty = findViewById(R.id.etgauranty);
        etold = findViewById(R.id.etold);

        FirebaseStorage storage = FirebaseStorage.getInstance();
        StorageReference uploader = storage.getReference("Image"+new Random().nextInt(50));

        uploader.putFile(filepath)
                .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
                    @Override
                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
                        uploader.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
                            @Override
                            public void onSuccess(Uri uri) {

                                dailog.dismiss();


                                FirebaseDatabase database = FirebaseDatabase.getInstance();
                                DatabaseReference root = database.getReference("User");

                                final String uniquekey = root.push().getKey();


                               ResponseModel model = new ResponseModel(etproductname.getText().toString(),etprice.getText().toString(),etgauranty.getText().toString(),etold.getText().toString(),uri.toString());

                                root.child(uniquekey).setValue(model);

                                etgauranty.setText("");
                                etold.setText("");
                                etprice.setText("");
                                etproductname.setText("");
                                btnimage.setImageResource(R.drawable.image3);

                                Intent intent = new Intent(getApplicationContext(),FetchDataActivity.class);
                                startActivity(intent);

                                Toast.makeText(UploadActivity.this, "upload data", Toast.LENGTH_SHORT).show();

                            }

                        });


                    }
                }).addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {
            @Override
            public void onProgress(@NonNull UploadTask.TaskSnapshot snapshot) {

                float persent = (100*snapshot.getBytesTransferred())/
                        snapshot.getTotalByteCount();
                dailog.setMessage("Data Uploaded : "+(int)persent+"%");

            }
        });


    }


}


